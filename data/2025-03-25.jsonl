{"title": "A Tight Meta-theorem for LOCAL Certification of MSO$_2$ Properties within Bounded Treewidth Graphs", "abstract": "Distributed networks are prone to errors so verifying their output is\ncritical. Hence, we develop LOCAL certification protocols for graph properties\nin which nodes are given certificates that allow them to check whether their\nnetwork as a whole satisfies some fixed property while only communicating with\ntheir local network. Most known LOCAL certification protocols are specifically\ntailored to the problem they work on and cannot be translated more generally.\nThus we target general protocols that can certify any property expressible\nwithin a certain logical framework. We consider Monadic Second Order Logic\n(MSO$_2$), a powerful framework that can express properties such as\nnon-$k$-colorability, Hamiltonicity, and $H$-minor-freeness. Unfortunately, in\ngeneral, there are MSO$_2$-expressible properties that cannot be certified\nwithout huge certificates. For instance, non-3-colorability requires\ncertificates of size $\\Omega(n^2/\\log n)$ on general $n$-vertex graphs\n(G\\\"o\\\"os, Suomela 2016). Hence, we impose additional structural restrictions\non the graph.\n  We provide a LOCAL certification protocol for certifying any\nMSO$_2$-expressible property on graphs of bounded treewidth and, consequently,\na LOCAL certification protocol for certifying bounded treewidth. That is for\neach integer $k$ and each MSO$_2$-expressible property $\\Pi$ we give a LOCAL\nCertification protocol to certify that a graph satisfies $\\Pi$ and has\ntreewidth at most $k$ using certificates of size $\\mathcal{O}(\\log n)$ (which\nis asymptotically optimal). Our LOCAL certification protocol requires only one\nround of distributed communication, hence it is also proof-labeling scheme.\n  Our result improves upon work by Fraigniaud, Montealegre, Rapaport, and\nTodinca (Algorithmica 2024), Bousquet, Feuilloley, Pierron (PODC 2022), and the\nvery recent work of Baterisna and Chang.", "published": "2025-03-25 13:58:08", "link": "http://arxiv.org/abs/2503.19671v1", "categories": ["cs.DC", "cs.DM", "cs.DS", "68R10", "F.2.2"], "primary_category": "cs.DC"}
{"title": "The $g$-good-neighbor diagnosability of product networks under the PMC model", "abstract": "The concept of neighbor connectivity originated from the assessment of the\nsubversion of espionage networks caused by underground resistance movements,\nand it has now been applied to measure the disruption of networks caused by\ncascading failures through neighbors. In this paper, we give two necessary and\nsufficient conditions of the existance of $g$-good-neighbor diagnosability. We\nintroduce a new concept called $g$-good neighbor cut-component number (gc\nnumber for short), which has close relation with $g$-good-neighbor\ndiagnosability. Sharp lower and upper bounds of the gc number of general graphs\nin terms of the $g$-good neighbor connectivity is given, which provides a\nformula to compute the $g$-good-neighbor diagnosability for general graphs\n(therefore for Cartesian product graphs). As their applications, we get the\nexact values or bounds for the gc numbers and $g$-good-neighbor diagnosability\nof grid, torus networks and generalized cubes.", "published": "2025-03-25 08:53:01", "link": "http://arxiv.org/abs/2503.19463v1", "categories": ["cs.DM", "math.CO"], "primary_category": "cs.DM"}
{"title": "LogicLearner: A Tool for the Guided Practice of Propositional Logic Proofs", "abstract": "The study of propositional logic -- fundamental to the theory of computing --\nis a cornerstone of the undergraduate computer science curriculum. Learning to\nsolve logical proofs requires repeated guided practice, but undergraduate\nstudents often lack access to on-demand tutoring in a judgment-free\nenvironment. In this work, we highlight the need for guided practice tools in\nundergraduate mathematics education and outline the desiderata of an effective\npractice tool. We accordingly develop LogicLearner, a web application for\nguided logic proof practice. LogicLearner consists of an interface to attempt\nlogic proofs step-by-step and an automated proof solver to generate solutions\non the fly, allowing users to request guidance as needed. We pilot LogicLearner\nas a practice tool in two semesters of an undergraduate discrete mathematics\ncourse and receive strongly positive feedback for usability and pedagogical\nvalue in student surveys. To the best of our knowledge, LogicLearner is the\nonly learning tool that provides an end-to-end practice environment for logic\nproofs with immediate, judgment-free feedback.", "published": "2025-03-25 02:23:08", "link": "http://arxiv.org/abs/2503.19280v1", "categories": ["cs.DM", "cs.AI", "cs.HC"], "primary_category": "cs.DM"}
