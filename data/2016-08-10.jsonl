{"title": "Hierarchical Character-Word Models for Language Identification", "abstract": "Social media messages' brevity and unconventional spelling pose a challenge\nto language identification. We introduce a hierarchical model that learns\ncharacter and contextualized word-level representations for language\nidentification. Our method performs well against strong base- lines, and can\nalso reveal code-switching.", "published": "2016-08-10 03:05:26", "link": "http://arxiv.org/abs/1608.03030v1", "categories": ["cs.CL"], "primary_category": "cs.CL"}
{"title": "An assessment of orthographic similarity measures for several African\n  languages", "abstract": "Natural Language Interfaces and tools such as spellcheckers and Web search in\none's own language are known to be useful in ICT-mediated communication. Most\nlanguages in Southern Africa are under-resourced, however. Therefore, it would\nbe very useful if both the generic and the few language-specific NLP tools\ncould be reused or easily adapted across languages. This depends on the notion,\nand extent, of similarity between the languages. We assess this from the angle\nof orthography and corpora. Twelve versions of the Universal Declaration of\nHuman Rights (UDHR) are examined, showing clusters of languages, and which are\nthus more or less amenable to cross-language adaptation of NLP tools, which do\nnot match with Guthrie zones. To examine the generalisability of these results,\nwe zoom in on isiZulu both quantitatively and qualitatively with four other\ncorpora and texts in different genres. The results show that the UDHR is a\ntypical text document orthographically. The results also provide insight into\nusability of typical measures such as lexical diversity and genre, and that the\nsame statistic may mean different things in different documents. While NLTK for\nPython could be used for basic analyses of text, it, and similar NLP tools,\nwill need considerable customization.", "published": "2016-08-10 07:45:46", "link": "http://arxiv.org/abs/1608.03065v1", "categories": ["cs.CL", "I.2.7"], "primary_category": "cs.CL"}
{"title": "Growing Graphs with Hyperedge Replacement Graph Grammars", "abstract": "Discovering the underlying structures present in large real world graphs is a\nfundamental scientific problem. In this paper we show that a graph's clique\ntree can be used to extract a hyperedge replacement grammar. If we store an\nordering from the extraction process, the extracted graph grammar is guaranteed\nto generate an isomorphic copy of the original graph. Or, a stochastic\napplication of the graph grammar rules can be used to quickly create random\ngraphs. In experiments on large real world networks, we show that random\ngraphs, generated from extracted graph grammars, exhibit a wide range of\nproperties that are very similar to the original graphs. In addition to graph\nproperties like degree or eigenvector centrality, what a graph \"looks like\"\nultimately depends on small details in local graph substructures that are\ndifficult to define at a global level. We show that our generative graph model\nis able to preserve these local substructures when generating new graphs and\nperforms well on new and difficult tests of model robustness.", "published": "2016-08-10 14:46:15", "link": "http://arxiv.org/abs/1608.03192v1", "categories": ["cs.SI", "cs.CL"], "primary_category": "cs.SI"}
