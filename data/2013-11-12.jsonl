{"title": "Authorship Attribution Using Word Network Features", "abstract": "In this paper, we explore a set of novel features for authorship attribution\nof documents. These features are derived from a word network representation of\nnatural language text. As has been noted in previous studies, natural language\ntends to show complex network structure at word level, with low degrees of\nseparation and scale-free (power law) degree distribution. There has also been\nwork on authorship attribution that incorporates ideas from complex networks.\nThe goal of our paper is to explore properties of these complex networks that\nare suitable as features for machine-learning-based authorship attribution of\ndocuments. We performed experiments on three different datasets, and obtained\npromising results.", "published": "2013-11-12 23:11:40", "link": "http://arxiv.org/abs/1311.2978v1", "categories": ["cs.CL"], "primary_category": "cs.CL"}
{"title": "Verifiable Source Code Documentation in Controlled Natural Language", "abstract": "Writing documentation about software internals is rarely considered a\nrewarding activity. It is highly time-consuming and the resulting documentation\nis fragile when the software is continuously evolving in a multi-developer\nsetting. Unfortunately, traditional programming environments poorly support the\nwriting and maintenance of documentation. Consequences are severe as the lack\nof documentation on software structure negatively impacts the overall quality\nof the software product. We show that using a controlled natural language with\na reasoner and a query engine is a viable technique for verifying the\nconsistency and accuracy of documentation and source code. Using ACE, a\nstate-of-the-art controlled natural language, we present positive results on\nthe comprehensibility and the general feasibility of creating and verifying\ndocumentation. As a case study, we used automatic documentation verification to\nidentify and fix severe flaws in the architecture of a non-trivial piece of\nsoftware. Moreover, a user experiment shows that our language is faster and\neasier to learn and understand than other formal languages for software\ndocumentation.", "published": "2013-11-12 07:44:10", "link": "http://arxiv.org/abs/1311.2702v1", "categories": ["cs.SE", "cs.AI", "cs.CL", "cs.HC", "cs.LO", "H.5.2; D.2.7"], "primary_category": "cs.SE"}
