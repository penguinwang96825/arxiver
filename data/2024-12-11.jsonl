{"title": "Auto-Generating Earnings Report Analysis via a Financial-Augmented LLM", "abstract": "Financial analysis heavily relies on the evaluation of earnings reports to\ngain insights into company performance. Traditional generation of these reports\nrequires extensive financial expertise and is time-consuming. With the\nimpressive progress in Large Language Models (LLMs), a wide variety of\nfinancially focused LLMs has emerged, addressing tasks like sentiment analysis\nand entity recognition in the financial domain. This paper presents a novel\nchallenge: developing an LLM specifically for automating the generation of\nearnings reports analysis. Our methodology involves an in-depth analysis of\nexisting earnings reports followed by a unique approach to fine-tune an LLM for\nthis purpose. This approach combines retrieval augmentation and the generation\nof instruction-based data, specifically tailored for the financial sector, to\nenhance the LLM's performance. With extensive financial documents, we construct\nfinancial instruction data, enabling the refined adaptation of our LLM to\nfinancial contexts. Preliminary results indicate that our augmented LLM\noutperforms general open-source models and rivals commercial counterparts like\nGPT-3.5 in financial applications. Our research paves the way for streamlined\nand insightful automation in financial report generation, marking a significant\nstride in the field of financial analysis.", "published": "2024-12-11 08:09:42", "link": "http://arxiv.org/abs/2412.08179v1", "categories": ["q-fin.ST", "cs.AI"], "primary_category": "q-fin.ST"}
{"title": "Efficient and Verified Continuous Double Auctions", "abstract": "Continuous double auctions are commonly used to match orders at currency,\nstock, and commodities exchanges. A verified implementation of continuous\ndouble auctions is a useful tool for market regulators as they give rise to\nautomated checkers that are guaranteed to detect errors in the trade logs of an\nexisting exchange if they contain trades that violate the matching rules. We\nprovide an efficient and formally verified implementation of continuous double\nauctions that takes $O(n \\log n)$ time to match $n$ orders. This improves an\nearlier $O(n^2)$ verified implementation. We also prove a matching\n$\\Omega(n\\log n)$ lower bound on the running time for continuous double\nauctions. Our new implementation takes only a couple of minutes to run on ten\nmillion randomly generated orders as opposed to a few days taken by the earlier\nimplementation. Our new implementation gives rise to an efficient automatic\nchecker.\n  We use the Coq proof assistant for verifying our implementation and\nextracting a verified OCaml program. While using Coq's standard library\nimplementation of red-black trees to obtain our improvement, we observed that\nits specification has serious gaps, which we fill in this work; this might be\nof independent interest.", "published": "2024-12-11 18:44:37", "link": "http://arxiv.org/abs/2412.08624v1", "categories": ["cs.LO", "q-fin.TR", "F.3.1; K.4.4"], "primary_category": "cs.LO"}
