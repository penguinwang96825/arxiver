{"title": "Boosting Question Answering by Deep Entity Recognition", "abstract": "In this paper an open-domain factoid question answering system for Polish,\nRAFAEL, is presented. The system goes beyond finding an answering sentence; it\nalso extracts a single string, corresponding to the required entity. Herein the\nfocus is placed on different approaches to entity recognition, essential for\nretrieving information matching question constraints. Apart from traditional\napproach, including named entity recognition (NER) solutions, a novel\ntechnique, called Deep Entity Recognition (DeepER), is introduced and\nimplemented. It allows a comprehensive search of all forms of entity references\nmatching a given WordNet synset (e.g. an impressionist), based on a previously\nassembled entity library. It has been created by analysing the first sentences\nof encyclopaedia entries and disambiguation and redirect pages. DeepER also\nprovides automatic evaluation, which makes possible numerous experiments,\nincluding over a thousand questions from a quiz TV show answered on the grounds\nof Polish Wikipedia. The final results of a manual evaluation on a separate\nquestion set show that the strength of DeepER approach lies in its ability to\nanswer questions that demand answers beyond the traditional categories of named\nentities.", "published": "2016-05-27 14:57:37", "link": "http://arxiv.org/abs/1605.08675v1", "categories": ["cs.CL"], "primary_category": "cs.CL"}
{"title": "Deep API Learning", "abstract": "Developers often wonder how to implement a certain functionality (e.g., how\nto parse XML files) using APIs. Obtaining an API usage sequence based on an\nAPI-related natural language query is very helpful in this regard. Given a\nquery, existing approaches utilize information retrieval models to search for\nmatching API sequences. These approaches treat queries and APIs as bag-of-words\n(i.e., keyword matching or word-to-word alignment) and lack a deep\nunderstanding of the semantics of the query.\n  We propose DeepAPI, a deep learning based approach to generate API usage\nsequences for a given natural language query. Instead of a bags-of-words\nassumption, it learns the sequence of words in a query and the sequence of\nassociated APIs. DeepAPI adapts a neural language model named RNN\nEncoder-Decoder. It encodes a word sequence (user query) into a fixed-length\ncontext vector, and generates an API sequence based on the context vector. We\nalso augment the RNN Encoder-Decoder by considering the importance of\nindividual APIs. We empirically evaluate our approach with more than 7 million\nannotated code snippets collected from GitHub. The results show that our\napproach generates largely accurate API sequences and outperforms the related\napproaches.", "published": "2016-05-27 08:27:18", "link": "http://arxiv.org/abs/1605.08535v3", "categories": ["cs.SE", "cs.CL", "cs.LG", "cs.NE", "D.2.13"], "primary_category": "cs.SE"}
{"title": "Stacking With Auxiliary Features", "abstract": "Ensembling methods are well known for improving prediction accuracy. However,\nthey are limited in the sense that they cannot discriminate among component\nmodels effectively. In this paper, we propose stacking with auxiliary features\nthat learns to fuse relevant information from multiple systems to improve\nperformance. Auxiliary features enable the stacker to rely on systems that not\njust agree on an output but also the provenance of the output. We demonstrate\nour approach on three very different and difficult problems -- the Cold Start\nSlot Filling, the Tri-lingual Entity Discovery and Linking and the ImageNet\nobject detection tasks. We obtain new state-of-the-art results on the first two\ntasks and substantial improvements on the detection task, thus verifying the\npower and generality of our approach.", "published": "2016-05-27 19:31:54", "link": "http://arxiv.org/abs/1605.08764v1", "categories": ["cs.CL", "cs.CV", "cs.LG"], "primary_category": "cs.CL"}
